

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sun Jun 23 19:37:08 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16     0000                     
    17                           ; Version 2.40
    18                           ; Generated 17/11/2021 GMT
    19                           ; 
    20                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F877A Definitions
    50                           ; 
    51                           ; SFR Addresses
    52     0000                     	;# 
    53     0001                     	;# 
    54     0002                     	;# 
    55     0003                     	;# 
    56     0004                     	;# 
    57     0005                     	;# 
    58     0006                     	;# 
    59     0007                     	;# 
    60     0008                     	;# 
    61     0009                     	;# 
    62     000A                     	;# 
    63     000B                     	;# 
    64     000C                     	;# 
    65     000D                     	;# 
    66     000E                     	;# 
    67     000E                     	;# 
    68     000F                     	;# 
    69     0010                     	;# 
    70     0011                     	;# 
    71     0012                     	;# 
    72     0013                     	;# 
    73     0014                     	;# 
    74     0015                     	;# 
    75     0015                     	;# 
    76     0016                     	;# 
    77     0017                     	;# 
    78     0018                     	;# 
    79     0019                     	;# 
    80     001A                     	;# 
    81     001B                     	;# 
    82     001B                     	;# 
    83     001C                     	;# 
    84     001D                     	;# 
    85     001E                     	;# 
    86     001F                     	;# 
    87     0081                     	;# 
    88     0085                     	;# 
    89     0086                     	;# 
    90     0087                     	;# 
    91     0088                     	;# 
    92     0089                     	;# 
    93     008C                     	;# 
    94     008D                     	;# 
    95     008E                     	;# 
    96     0091                     	;# 
    97     0092                     	;# 
    98     0093                     	;# 
    99     0094                     	;# 
   100     0098                     	;# 
   101     0099                     	;# 
   102     009C                     	;# 
   103     009D                     	;# 
   104     009E                     	;# 
   105     009F                     	;# 
   106     010C                     	;# 
   107     010D                     	;# 
   108     010E                     	;# 
   109     010F                     	;# 
   110     018C                     	;# 
   111     018D                     	;# 
   112     0000                     	;# 
   113     0001                     	;# 
   114     0002                     	;# 
   115     0003                     	;# 
   116     0004                     	;# 
   117     0005                     	;# 
   118     0006                     	;# 
   119     0007                     	;# 
   120     0008                     	;# 
   121     0009                     	;# 
   122     000A                     	;# 
   123     000B                     	;# 
   124     000C                     	;# 
   125     000D                     	;# 
   126     000E                     	;# 
   127     000E                     	;# 
   128     000F                     	;# 
   129     0010                     	;# 
   130     0011                     	;# 
   131     0012                     	;# 
   132     0013                     	;# 
   133     0014                     	;# 
   134     0015                     	;# 
   135     0015                     	;# 
   136     0016                     	;# 
   137     0017                     	;# 
   138     0018                     	;# 
   139     0019                     	;# 
   140     001A                     	;# 
   141     001B                     	;# 
   142     001B                     	;# 
   143     001C                     	;# 
   144     001D                     	;# 
   145     001E                     	;# 
   146     001F                     	;# 
   147     0081                     	;# 
   148     0085                     	;# 
   149     0086                     	;# 
   150     0087                     	;# 
   151     0088                     	;# 
   152     0089                     	;# 
   153     008C                     	;# 
   154     008D                     	;# 
   155     008E                     	;# 
   156     0091                     	;# 
   157     0092                     	;# 
   158     0093                     	;# 
   159     0094                     	;# 
   160     0098                     	;# 
   161     0099                     	;# 
   162     009C                     	;# 
   163     009D                     	;# 
   164     009E                     	;# 
   165     009F                     	;# 
   166     010C                     	;# 
   167     010D                     	;# 
   168     010E                     	;# 
   169     010F                     	;# 
   170     018C                     	;# 
   171     018D                     	;# 
   172     0000                     	;# 
   173     0001                     	;# 
   174     0002                     	;# 
   175     0003                     	;# 
   176     0004                     	;# 
   177     0005                     	;# 
   178     0006                     	;# 
   179     0007                     	;# 
   180     0008                     	;# 
   181     0009                     	;# 
   182     000A                     	;# 
   183     000B                     	;# 
   184     000C                     	;# 
   185     000D                     	;# 
   186     000E                     	;# 
   187     000E                     	;# 
   188     000F                     	;# 
   189     0010                     	;# 
   190     0011                     	;# 
   191     0012                     	;# 
   192     0013                     	;# 
   193     0014                     	;# 
   194     0015                     	;# 
   195     0015                     	;# 
   196     0016                     	;# 
   197     0017                     	;# 
   198     0018                     	;# 
   199     0019                     	;# 
   200     001A                     	;# 
   201     001B                     	;# 
   202     001B                     	;# 
   203     001C                     	;# 
   204     001D                     	;# 
   205     001E                     	;# 
   206     001F                     	;# 
   207     0081                     	;# 
   208     0085                     	;# 
   209     0086                     	;# 
   210     0087                     	;# 
   211     0088                     	;# 
   212     0089                     	;# 
   213     008C                     	;# 
   214     008D                     	;# 
   215     008E                     	;# 
   216     0091                     	;# 
   217     0092                     	;# 
   218     0093                     	;# 
   219     0094                     	;# 
   220     0098                     	;# 
   221     0099                     	;# 
   222     009C                     	;# 
   223     009D                     	;# 
   224     009E                     	;# 
   225     009F                     	;# 
   226     010C                     	;# 
   227     010D                     	;# 
   228     010E                     	;# 
   229     010F                     	;# 
   230     018C                     	;# 
   231     018D                     	;# 
   232                           
   233                           	psect	idataCOMMON
   234     0636                     __pidataCOMMON:
   235                           
   236                           ;initializer for read_digital_keypad@once
   237     0636  3401               	retlw	1
   238                           
   239                           	psect	strings
   240     0003                     __pstrings:
   241     0003                     stringtab:
   242     0003                     __stringtab:
   243     0003                     stringcode:	
   244                           ;	String table - string pointers are 1 byte each
   245                           
   246     0003                     stringdir:
   247     0003  3000               	movlw	high stringdir
   248     0004  008A               	movwf	10
   249     0005  0804               	movf	4,w
   250     0006  0A84               	incf	4,f
   251     0007  0782               	addwf	2,f
   252     0008                     __stringbase:
   253     0008  3400               	retlw	0
   254     0009                     __end_of__stringtab:
   255     0009                     main@delay_limit:
   256     0009  3420               	retlw	32
   257     000A  344E               	retlw	78
   258     000B                     __end_ofmain@delay_limit:
   259     0006                     _PORTB	set	6
   260     0008                     _PORTD	set	8
   261     0086                     _TRISB	set	134
   262     0088                     _TRISD	set	136
   263                           
   264                           	psect	cinit
   265     07F6                     start_initialization:	
   266                           ; #config settings
   267                           
   268     07F6                     __initialization:
   269                           
   270                           ; Initialize objects allocated to COMMON
   271     07F6  120A  118A  2636  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   272     07FB  00FB               	movwf	__pdataCOMMON& (0+127)
   273     07FC                     end_of_initialization:	
   274                           ;End of C runtime variable initialization code
   275                           
   276     07FC                     __end_of__initialization:
   277     07FC  0183               	clrf	3
   278     07FD  120A  118A  2E73   	ljmp	_main	;jump to C main() function
   279                           
   280                           	psect	dataCOMMON
   281     007B                     __pdataCOMMON:
   282     007B                     read_digital_keypad@once:
   283     007B                     	ds	1
   284                           
   285                           	psect	cstackCOMMON
   286     0070                     __pcstackCOMMON:
   287     0070                     ?_init_digital_keypad:
   288     0070                     ??_init_digital_keypad:	
   289                           ; 1 bytes @ 0x0
   290                           
   291     0070                     ?_read_digital_keypad:	
   292                           ; 1 bytes @ 0x0
   293                           
   294     0070                     ??_read_digital_keypad:	
   295                           ; 1 bytes @ 0x0
   296                           
   297     0070                     ?_init_config:	
   298                           ; 1 bytes @ 0x0
   299                           
   300     0070                     ??_init_config:	
   301                           ; 1 bytes @ 0x0
   302                           
   303     0070                     ?_main:	
   304                           ; 1 bytes @ 0x0
   305                           
   306                           
   307                           ; 1 bytes @ 0x0
   308     0070                     	ds	1
   309     0071                     read_digital_keypad@mode:
   310                           
   311                           ; 1 bytes @ 0x1
   312     0071                     	ds	1
   313     0072                     ??_main:
   314                           
   315                           ; 1 bytes @ 0x2
   316     0072                     	ds	1
   317     0073                     main@key:
   318                           
   319                           ; 1 bytes @ 0x3
   320     0073                     	ds	1
   321     0074                     main@delay_counter:
   322                           
   323                           ; 2 bytes @ 0x4
   324     0074                     	ds	2
   325     0076                     main@state:
   326                           
   327                           ; 2 bytes @ 0x6
   328     0076                     	ds	2
   329     0078                     main@flag:
   330                           
   331                           ; 1 bytes @ 0x8
   332     0078                     	ds	1
   333     0079                     main@i:
   334                           
   335                           ; 2 bytes @ 0x9
   336     0079                     	ds	2
   337                           
   338                           	psect	maintext
   339     0673                     __pmaintext:	
   340 ;;
   341 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   342 ;;
   343 ;; *************** function _main *****************
   344 ;; Defined at:
   345 ;;		line 19 in file "main.c"
   346 ;; Parameters:    Size  Location     Type
   347 ;;		None
   348 ;; Auto vars:     Size  Location     Type
   349 ;;  i               2    9[COMMON] volatile unsigned int 
   350 ;;  state           2    6[COMMON] volatile unsigned int 
   351 ;;  delay_counte    2    4[COMMON] volatile unsigned int 
   352 ;;  flag            1    8[COMMON] volatile unsigned char 
   353 ;;  key             1    3[COMMON] unsigned char 
   354 ;; Return value:  Size  Location     Type
   355 ;;                  1    wreg      void 
   356 ;; Registers used:
   357 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   358 ;; Tracked objects:
   359 ;;		On entry : B00/0
   360 ;;		On exit  : 0/0
   361 ;;		Unchanged: 0/0
   362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   363 ;;      Params:         0       0       0       0       0
   364 ;;      Locals:         8       0       0       0       0
   365 ;;      Temps:          1       0       0       0       0
   366 ;;      Totals:         9       0       0       0       0
   367 ;;Total ram usage:        9 bytes
   368 ;; Hardware stack levels required when called: 2
   369 ;; This function calls:
   370 ;;		_init_config
   371 ;;		_read_digital_keypad
   372 ;; This function is called by:
   373 ;;		Startup code after reset
   374 ;; This function uses a non-reentrant model
   375 ;;
   376                           
   377     0673                     _main:	
   378                           ;psect for function _main
   379                           
   380     0673                     l648:	
   381                           ;incstack = 0
   382                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   383                           
   384                           
   385                           ;main.c: 20:     init_config();;main.c: 22:     while (1)
   386     0673  01F8               	clrf	main@flag	;volatile
   387                           
   388                           ;main.c: 23:     {
   389     0674  01F6               	clrf	main@state	;volatile
   390     0675  01F7               	clrf	main@state+1	;volatile
   391                           
   392                           ;main.c: 24:         key = read_digital_keypad(1);
   393     0676  01F9               	clrf	main@i	;volatile
   394     0677  01FA               	clrf	main@i+1	;volatile
   395                           
   396                           ;main.c: 25: 
   397     0678  01F4               	clrf	main@delay_counter	;volatile
   398     0679  01F5               	clrf	main@delay_counter+1	;volatile
   399     067A                     l650:
   400                           
   401                           ;main.c: 26:         if (key == 0x3E && flag != 1);main.c: 27:         {
   402     067A  120A  118A  263D  120A  118A  	fcall	_init_config
   403     067F                     l652:
   404                           
   405                           ;main.c: 30:         };main.c: 31:         else if (key == 0x3D && flag != 2)
   406     067F  3001               	movlw	1
   407     0680  120A  118A  2649  120A  118A  	fcall	_read_digital_keypad
   408     0685  00F3               	movwf	main@key
   409     0686                     l654:
   410                           
   411                           ;main.c: 33:             flag = 2;
   412     0686  303E               	movlw	62
   413     0687  0673               	xorwf	main@key,w
   414     0688  1D03               	btfss	3,2
   415     0689  2E8B               	goto	u51
   416     068A  2E8C               	goto	u50
   417     068B                     u51:
   418     068B  2E96               	goto	l662
   419     068C                     u50:
   420     068C                     l656:
   421     068C  0378               	decf	main@flag,w	;volatile
   422     068D  1903               	btfsc	3,2
   423     068E  2E90               	goto	u61
   424     068F  2E91               	goto	u60
   425     0690                     u61:
   426     0690  2E96               	goto	l662
   427     0691                     u60:
   428     0691                     l658:
   429                           
   430                           ;main.c: 34:             i = 0;;main.c: 35:         }
   431     0691  3001               	movlw	1
   432     0692  00F8               	movwf	main@flag	;volatile
   433     0693                     l660:
   434                           
   435                           ;main.c: 36:         else if (key == 0x3B && flag != 3)
   436     0693  01F9               	clrf	main@i	;volatile
   437     0694  01FA               	clrf	main@i+1	;volatile
   438                           
   439                           ;main.c: 37:         {
   440     0695  2EC5               	goto	l686
   441     0696                     l662:
   442     0696  303D               	movlw	61
   443     0697  0673               	xorwf	main@key,w
   444     0698  1D03               	btfss	3,2
   445     0699  2E9B               	goto	u71
   446     069A  2E9C               	goto	u70
   447     069B                     u71:
   448     069B  2EA5               	goto	l670
   449     069C                     u70:
   450     069C                     l664:
   451     069C  3002               	movlw	2
   452     069D  0678               	xorwf	main@flag,w	;volatile
   453     069E  1903               	btfsc	3,2
   454     069F  2EA1               	goto	u81
   455     06A0  2EA2               	goto	u80
   456     06A1                     u81:
   457     06A1  2EA5               	goto	l670
   458     06A2                     u80:
   459     06A2                     l666:
   460                           
   461                           ;main.c: 39:             state = 0;;main.c: 40:         }
   462     06A2  3002               	movlw	2
   463     06A3  00F8               	movwf	main@flag	;volatile
   464     06A4  2E93               	goto	l660
   465     06A5                     l670:
   466     06A5  303B               	movlw	59
   467     06A6  0673               	xorwf	main@key,w
   468     06A7  1D03               	btfss	3,2
   469     06A8  2EAA               	goto	u91
   470     06A9  2EAB               	goto	u90
   471     06AA                     u91:
   472     06AA  2EB6               	goto	l678
   473     06AB                     u90:
   474     06AB                     l672:
   475     06AB  3003               	movlw	3
   476     06AC  0678               	xorwf	main@flag,w	;volatile
   477     06AD  1903               	btfsc	3,2
   478     06AE  2EB0               	goto	u101
   479     06AF  2EB1               	goto	u100
   480     06B0                     u101:
   481     06B0  2EB6               	goto	l678
   482     06B1                     u100:
   483     06B1                     l674:
   484                           
   485                           ;main.c: 44:             state = 0;;main.c: 45:         }
   486     06B1  3003               	movlw	3
   487     06B2  00F8               	movwf	main@flag	;volatile
   488     06B3                     l676:
   489                           
   490                           ;main.c: 46: 
   491     06B3  01F6               	clrf	main@state	;volatile
   492     06B4  01F7               	clrf	main@state+1	;volatile
   493                           
   494                           ;main.c: 47: 
   495     06B5  2EC5               	goto	l686
   496     06B6                     l678:
   497     06B6  3037               	movlw	55
   498     06B7  0673               	xorwf	main@key,w
   499     06B8  1D03               	btfss	3,2
   500     06B9  2EBB               	goto	u111
   501     06BA  2EBC               	goto	u110
   502     06BB                     u111:
   503     06BB  2EC5               	goto	l22
   504     06BC                     u110:
   505     06BC                     l680:
   506     06BC  3004               	movlw	4
   507     06BD  0678               	xorwf	main@flag,w	;volatile
   508     06BE  1903               	btfsc	3,2
   509     06BF  2EC1               	goto	u121
   510     06C0  2EC2               	goto	u120
   511     06C1                     u121:
   512     06C1  2EC5               	goto	l22
   513     06C2                     u120:
   514     06C2                     l682:
   515                           
   516                           ;main.c: 49:         {;main.c: 50:             delay_counter++;
   517     06C2  3004               	movlw	4
   518     06C3  00F8               	movwf	main@flag	;volatile
   519     06C4  2EB3               	goto	l676
   520     06C5                     l22:
   521     06C5                     l686:
   522                           
   523                           ;main.c: 55: 
   524     06C5  304E               	movlw	78
   525     06C6  0275               	subwf	main@delay_counter+1,w	;volatile
   526     06C7  3020               	movlw	32
   527     06C8  1903               	skipnz
   528     06C9  0274               	subwf	main@delay_counter,w	;volatile
   529     06CA  1803               	skipnc
   530     06CB  2ECD               	goto	u131
   531     06CC  2ECE               	goto	u130
   532     06CD                     u131:
   533     06CD  2ED5               	goto	l690
   534     06CE                     u130:
   535     06CE                     l688:
   536                           
   537                           ;main.c: 56:             if (flag == 1);main.c: 57:             {
   538     06CE  3001               	movlw	1
   539     06CF  07F4               	addwf	main@delay_counter,f	;volatile
   540     06D0  1803               	skipnc
   541     06D1  0AF5               	incf	main@delay_counter+1,f	;volatile
   542     06D2  3000               	movlw	0
   543     06D3  07F5               	addwf	main@delay_counter+1,f	;volatile
   544                           
   545                           ;main.c: 58: 
   546     06D4  2E7F               	goto	l652
   547     06D5                     l690:
   548                           
   549                           ;main.c: 60:                 {;main.c: 61:                     PORTD |= (1 << i);
   550     06D5  01F4               	clrf	main@delay_counter	;volatile
   551     06D6  01F5               	clrf	main@delay_counter+1	;volatile
   552     06D7                     l692:
   553                           
   554                           ;main.c: 63:                 }
   555     06D7  0378               	decf	main@flag,w	;volatile
   556     06D8  1D03               	btfss	3,2
   557     06D9  2EDB               	goto	u141
   558     06DA  2EDC               	goto	u140
   559     06DB                     u141:
   560     06DB  2F6C               	goto	l726
   561     06DC                     u140:
   562     06DC                     l694:
   563                           
   564                           ;main.c: 64:                 else if (i > 7 && i <= 15);main.c: 66:                     
      +                          PORTD &= ~(1 << (i - 8));
   565     06DC  3000               	movlw	0
   566     06DD  027A               	subwf	main@i+1,w	;volatile
   567     06DE  3008               	movlw	8
   568     06DF  1903               	skipnz
   569     06E0  0279               	subwf	main@i,w	;volatile
   570     06E1  1803               	skipnc
   571     06E2  2EE4               	goto	u151
   572     06E3  2EE5               	goto	u150
   573     06E4                     u151:
   574     06E4  2EFB               	goto	l700
   575     06E5                     u150:
   576     06E5                     l696:
   577                           
   578                           ;main.c: 67:                     i++;;main.c: 68:                 }
   579     06E5  3001               	movlw	1
   580     06E6  00F2               	movwf	??_main
   581     06E7  0A79               	incf	main@i,w	;volatile
   582     06E8  2EEB               	goto	u164
   583     06E9                     u165:
   584     06E9  1003               	clrc
   585     06EA  0DF2               	rlf	??_main,f
   586     06EB                     u164:
   587     06EB  3EFF               	addlw	-1
   588     06EC  1D03               	skipz
   589     06ED  2EE9               	goto	u165
   590     06EE  0872               	movf	??_main,w
   591     06EF  00FF               	movwf	btemp+1
   592     06F0  087F               	movf	btemp+1,w
   593     06F1  1283               	bcf	3,5	;RP0=0, select bank0
   594     06F2  1303               	bcf	3,6	;RP1=0, select bank0
   595     06F3  0488               	iorwf	8,f	;volatile
   596     06F4                     l698:
   597                           
   598                           ;main.c: 69:                 else if (i > 15 && i <= 23)
   599     06F4  3001               	movlw	1
   600     06F5  07F9               	addwf	main@i,f	;volatile
   601     06F6  1803               	skipnc
   602     06F7  0AFA               	incf	main@i+1,f	;volatile
   603     06F8  3000               	movlw	0
   604     06F9  07FA               	addwf	main@i+1,f	;volatile
   605                           
   606                           ;main.c: 70:                 {
   607     06FA  2E7F               	goto	l652
   608     06FB                     l700:
   609     06FB  3000               	movlw	0
   610     06FC  027A               	subwf	main@i+1,w	;volatile
   611     06FD  3008               	movlw	8
   612     06FE  1903               	skipnz
   613     06FF  0279               	subwf	main@i,w	;volatile
   614     0700  1C03               	skipc
   615     0701  2F03               	goto	u171
   616     0702  2F04               	goto	u170
   617     0703                     u171:
   618     0703  2F20               	goto	l708
   619     0704                     u170:
   620     0704                     l702:
   621     0704  3000               	movlw	0
   622     0705  027A               	subwf	main@i+1,w	;volatile
   623     0706  3010               	movlw	16
   624     0707  1903               	skipnz
   625     0708  0279               	subwf	main@i,w	;volatile
   626     0709  1803               	skipnc
   627     070A  2F0C               	goto	u181
   628     070B  2F0D               	goto	u180
   629     070C                     u181:
   630     070C  2F20               	goto	l708
   631     070D                     u180:
   632     070D                     l704:
   633                           
   634                           ;main.c: 72:                     i++;;main.c: 73:                 }
   635     070D  3001               	movlw	1
   636     070E  00F2               	movwf	??_main
   637     070F  0879               	movf	main@i,w	;volatile
   638     0710  3EF8               	addlw	248
   639     0711  3E01               	addlw	1
   640     0712  2F15               	goto	u194
   641     0713                     u195:
   642     0713  1003               	clrc
   643     0714  0DF2               	rlf	??_main,f
   644     0715                     u194:
   645     0715  3EFF               	addlw	-1
   646     0716  1D03               	skipz
   647     0717  2F13               	goto	u195
   648     0718  0872               	movf	??_main,w
   649     0719  3AFF               	xorlw	255
   650     071A  00FF               	movwf	btemp+1
   651     071B  087F               	movf	btemp+1,w
   652     071C  1283               	bcf	3,5	;RP0=0, select bank0
   653     071D  1303               	bcf	3,6	;RP1=0, select bank0
   654     071E  0588               	andwf	8,f	;volatile
   655     071F  2EF4               	goto	l698
   656     0720                     l708:
   657     0720  3000               	movlw	0
   658     0721  027A               	subwf	main@i+1,w	;volatile
   659     0722  3010               	movlw	16
   660     0723  1903               	skipnz
   661     0724  0279               	subwf	main@i,w	;volatile
   662     0725  1C03               	skipc
   663     0726  2F28               	goto	u201
   664     0727  2F29               	goto	u200
   665     0728                     u201:
   666     0728  2F44               	goto	l716
   667     0729                     u200:
   668     0729                     l710:
   669     0729  3000               	movlw	0
   670     072A  027A               	subwf	main@i+1,w	;volatile
   671     072B  3018               	movlw	24
   672     072C  1903               	skipnz
   673     072D  0279               	subwf	main@i,w	;volatile
   674     072E  1803               	skipnc
   675     072F  2F31               	goto	u211
   676     0730  2F32               	goto	u210
   677     0731                     u211:
   678     0731  2F44               	goto	l716
   679     0732                     u210:
   680     0732                     l712:
   681                           
   682                           ;main.c: 77:                     i++;;main.c: 78:                 }
   683     0732  3001               	movlw	1
   684     0733  00F2               	movwf	??_main
   685     0734  0879               	movf	main@i,w	;volatile
   686     0735  3C17               	sublw	23
   687     0736  3E01               	addlw	1
   688     0737  2F3A               	goto	u224
   689     0738                     u225:
   690     0738  1003               	clrc
   691     0739  0DF2               	rlf	??_main,f
   692     073A                     u224:
   693     073A  3EFF               	addlw	-1
   694     073B  1D03               	skipz
   695     073C  2F38               	goto	u225
   696     073D  0872               	movf	??_main,w
   697     073E  00FF               	movwf	btemp+1
   698     073F  087F               	movf	btemp+1,w
   699     0740  1283               	bcf	3,5	;RP0=0, select bank0
   700     0741  1303               	bcf	3,6	;RP1=0, select bank0
   701     0742  0488               	iorwf	8,f	;volatile
   702     0743  2EF4               	goto	l698
   703     0744                     l716:
   704     0744  3000               	movlw	0
   705     0745  027A               	subwf	main@i+1,w	;volatile
   706     0746  3018               	movlw	24
   707     0747  1903               	skipnz
   708     0748  0279               	subwf	main@i,w	;volatile
   709     0749  1C03               	skipc
   710     074A  2F4C               	goto	u231
   711     074B  2F4D               	goto	u230
   712     074C                     u231:
   713     074C  2F69               	goto	l724
   714     074D                     u230:
   715     074D                     l718:
   716     074D  3000               	movlw	0
   717     074E  027A               	subwf	main@i+1,w	;volatile
   718     074F  3020               	movlw	32
   719     0750  1903               	skipnz
   720     0751  0279               	subwf	main@i,w	;volatile
   721     0752  1803               	skipnc
   722     0753  2F55               	goto	u241
   723     0754  2F56               	goto	u240
   724     0755                     u241:
   725     0755  2F69               	goto	l724
   726     0756                     u240:
   727     0756                     l720:
   728                           
   729                           ;main.c: 82:                 };main.c: 83:             }
   730     0756  3001               	movlw	1
   731     0757  00F2               	movwf	??_main
   732     0758  0879               	movf	main@i,w	;volatile
   733     0759  3C1F               	sublw	31
   734     075A  3E01               	addlw	1
   735     075B  2F5E               	goto	u254
   736     075C                     u255:
   737     075C  1003               	clrc
   738     075D  0DF2               	rlf	??_main,f
   739     075E                     u254:
   740     075E  3EFF               	addlw	-1
   741     075F  1D03               	skipz
   742     0760  2F5C               	goto	u255
   743     0761  0872               	movf	??_main,w
   744     0762  3AFF               	xorlw	255
   745     0763  00FF               	movwf	btemp+1
   746     0764  087F               	movf	btemp+1,w
   747     0765  1283               	bcf	3,5	;RP0=0, select bank0
   748     0766  1303               	bcf	3,6	;RP1=0, select bank0
   749     0767  0588               	andwf	8,f	;volatile
   750     0768  2EF4               	goto	l698
   751     0769                     l724:
   752                           
   753                           ;main.c: 87:                 if (i <= 7);main.c: 88:                 {
   754     0769  01F9               	clrf	main@i	;volatile
   755     076A  01FA               	clrf	main@i+1	;volatile
   756     076B  2E7F               	goto	l652
   757     076C                     l726:
   758     076C  3002               	movlw	2
   759     076D  0678               	xorwf	main@flag,w	;volatile
   760     076E  1D03               	btfss	3,2
   761     076F  2F71               	goto	u261
   762     0770  2F72               	goto	u260
   763     0771                     u261:
   764     0771  2FB0               	goto	l744
   765     0772                     u260:
   766     0772                     l728:
   767                           
   768                           ;main.c: 92:                 else if (i > 7 && i <= 15);main.c: 94:                     
      +                          PORTD &= ~(1 << (i - 8));
   769     0772  3000               	movlw	0
   770     0773  027A               	subwf	main@i+1,w	;volatile
   771     0774  3008               	movlw	8
   772     0775  1903               	skipnz
   773     0776  0279               	subwf	main@i,w	;volatile
   774     0777  1803               	skipnc
   775     0778  2F7A               	goto	u271
   776     0779  2F7B               	goto	u270
   777     077A                     u271:
   778     077A  2F8B               	goto	l734
   779     077B                     u270:
   780     077B                     l730:
   781                           
   782                           ;main.c: 95:                     i++;;main.c: 96:                 }
   783     077B  3001               	movlw	1
   784     077C  00F2               	movwf	??_main
   785     077D  0A79               	incf	main@i,w	;volatile
   786     077E  2F81               	goto	u284
   787     077F                     u285:
   788     077F  1003               	clrc
   789     0780  0DF2               	rlf	??_main,f
   790     0781                     u284:
   791     0781  3EFF               	addlw	-1
   792     0782  1D03               	skipz
   793     0783  2F7F               	goto	u285
   794     0784  0872               	movf	??_main,w
   795     0785  00FF               	movwf	btemp+1
   796     0786  087F               	movf	btemp+1,w
   797     0787  1283               	bcf	3,5	;RP0=0, select bank0
   798     0788  1303               	bcf	3,6	;RP1=0, select bank0
   799     0789  0488               	iorwf	8,f	;volatile
   800     078A  2EF4               	goto	l698
   801     078B                     l734:
   802     078B  3000               	movlw	0
   803     078C  027A               	subwf	main@i+1,w	;volatile
   804     078D  3008               	movlw	8
   805     078E  1903               	skipnz
   806     078F  0279               	subwf	main@i,w	;volatile
   807     0790  1C03               	skipc
   808     0791  2F93               	goto	u291
   809     0792  2F94               	goto	u290
   810     0793                     u291:
   811     0793  2F69               	goto	l724
   812     0794                     u290:
   813     0794                     l736:
   814     0794  3000               	movlw	0
   815     0795  027A               	subwf	main@i+1,w	;volatile
   816     0796  3010               	movlw	16
   817     0797  1903               	skipnz
   818     0798  0279               	subwf	main@i,w	;volatile
   819     0799  1803               	skipnc
   820     079A  2F9C               	goto	u301
   821     079B  2F9D               	goto	u300
   822     079C                     u301:
   823     079C  2F69               	goto	l724
   824     079D                     u300:
   825     079D                     l738:
   826                           
   827                           ;main.c: 100:                 };main.c: 101:             }
   828     079D  3001               	movlw	1
   829     079E  00F2               	movwf	??_main
   830     079F  0879               	movf	main@i,w	;volatile
   831     07A0  3EF8               	addlw	248
   832     07A1  3E01               	addlw	1
   833     07A2  2FA5               	goto	u314
   834     07A3                     u315:
   835     07A3  1003               	clrc
   836     07A4  0DF2               	rlf	??_main,f
   837     07A5                     u314:
   838     07A5  3EFF               	addlw	-1
   839     07A6  1D03               	skipz
   840     07A7  2FA3               	goto	u315
   841     07A8  0872               	movf	??_main,w
   842     07A9  3AFF               	xorlw	255
   843     07AA  00FF               	movwf	btemp+1
   844     07AB  087F               	movf	btemp+1,w
   845     07AC  1283               	bcf	3,5	;RP0=0, select bank0
   846     07AD  1303               	bcf	3,6	;RP1=0, select bank0
   847     07AE  0588               	andwf	8,f	;volatile
   848     07AF  2EF4               	goto	l698
   849     07B0                     l744:
   850     07B0  3003               	movlw	3
   851     07B1  0678               	xorwf	main@flag,w	;volatile
   852     07B2  1D03               	btfss	3,2
   853     07B3  2FB5               	goto	u321
   854     07B4  2FB6               	goto	u320
   855     07B5                     u321:
   856     07B5  2FD2               	goto	l756
   857     07B6                     u320:
   858     07B6                     l746:
   859                           
   860                           ;main.c: 110:                 };main.c: 112:                 {
   861     07B6  0876               	movf	main@state,w	;volatile
   862     07B7  0477               	iorwf	main@state+1,w	;volatile
   863     07B8  1D03               	btfss	3,2
   864     07B9  2FBB               	goto	u331
   865     07BA  2FBC               	goto	u330
   866     07BB                     u331:
   867     07BB  2FCB               	goto	l750
   868     07BC                     u330:
   869     07BC                     l748:
   870                           
   871                           ;main.c: 113:                     PORTD = 0xAA;;main.c: 114:                     state =
      +                           0;
   872     07BC  3055               	movlw	85
   873     07BD  1283               	bcf	3,5	;RP0=0, select bank0
   874     07BE  1303               	bcf	3,6	;RP1=0, select bank0
   875     07BF  0088               	movwf	8	;volatile
   876                           
   877                           ;main.c: 115:                     i++;
   878     07C0  3001               	movlw	1
   879     07C1  00F6               	movwf	main@state	;volatile
   880     07C2  3000               	movlw	0
   881     07C3  00F7               	movwf	main@state+1	;volatile
   882                           
   883                           ;main.c: 116:                 }
   884     07C4  3001               	movlw	1
   885     07C5  07F9               	addwf	main@i,f	;volatile
   886     07C6  1803               	skipnc
   887     07C7  0AFA               	incf	main@i+1,f	;volatile
   888     07C8  3000               	movlw	0
   889     07C9  07FA               	addwf	main@i+1,f	;volatile
   890                           
   891                           ;main.c: 117:             }
   892     07CA  2E7F               	goto	l652
   893     07CB                     l750:
   894                           
   895                           ;main.c: 119:             {;main.c: 120: 
   896     07CB  30AA               	movlw	170
   897     07CC  1283               	bcf	3,5	;RP0=0, select bank0
   898     07CD  1303               	bcf	3,6	;RP1=0, select bank0
   899     07CE  0088               	movwf	8	;volatile
   900     07CF                     l752:
   901                           
   902                           ;main.c: 121:                 if (state == 0)
   903     07CF  01F6               	clrf	main@state	;volatile
   904     07D0  01F7               	clrf	main@state+1	;volatile
   905     07D1  2EF4               	goto	l698
   906     07D2                     l756:
   907     07D2  3004               	movlw	4
   908     07D3  0678               	xorwf	main@flag,w	;volatile
   909     07D4  1D03               	btfss	3,2
   910     07D5  2FD7               	goto	u341
   911     07D6  2FD8               	goto	u340
   912     07D7                     u341:
   913     07D7  2FF2               	goto	l37
   914     07D8                     u340:
   915     07D8                     l758:
   916                           
   917                           ;main.c: 126:                 };main.c: 128:                 {
   918     07D8  0876               	movf	main@state,w	;volatile
   919     07D9  0477               	iorwf	main@state+1,w	;volatile
   920     07DA  1D03               	btfss	3,2
   921     07DB  2FDD               	goto	u351
   922     07DC  2FDE               	goto	u350
   923     07DD                     u351:
   924     07DD  2FED               	goto	l762
   925     07DE                     u350:
   926     07DE                     l760:
   927                           
   928                           ;main.c: 129:                     PORTD = 0xF0;;main.c: 130:                     state =
      +                           0;
   929     07DE  300F               	movlw	15
   930     07DF  1283               	bcf	3,5	;RP0=0, select bank0
   931     07E0  1303               	bcf	3,6	;RP1=0, select bank0
   932     07E1  0088               	movwf	8	;volatile
   933                           
   934                           ;main.c: 131:                     i++;
   935     07E2  3001               	movlw	1
   936     07E3  00F6               	movwf	main@state	;volatile
   937     07E4  3000               	movlw	0
   938     07E5  00F7               	movwf	main@state+1	;volatile
   939                           
   940                           ;main.c: 132:                 }
   941     07E6  3001               	movlw	1
   942     07E7  07F9               	addwf	main@i,f	;volatile
   943     07E8  1803               	skipnc
   944     07E9  0AFA               	incf	main@i+1,f	;volatile
   945     07EA  3000               	movlw	0
   946     07EB  07FA               	addwf	main@i+1,f	;volatile
   947                           
   948                           ;main.c: 133:             }
   949     07EC  2E7F               	goto	l652
   950     07ED                     l762:
   951                           
   952                           ;main.c: 135:     };main.c: 136:     return;
   953     07ED  30F0               	movlw	240
   954     07EE  1283               	bcf	3,5	;RP0=0, select bank0
   955     07EF  1303               	bcf	3,6	;RP1=0, select bank0
   956     07F0  0088               	movwf	8	;volatile
   957     07F1  2FCF               	goto	l752
   958     07F2                     l37:
   959     07F2  2E7F               	goto	l652
   960     07F3  120A  118A  2800   	ljmp	start
   961     07F6                     __end_of_main:
   962                           
   963                           	psect	text1
   964     0649                     __ptext1:	
   965 ;; *************** function _read_digital_keypad *****************
   966 ;; Defined at:
   967 ;;		line 10 in file "digital_keypad.c"
   968 ;; Parameters:    Size  Location     Type
   969 ;;  mode            1    wreg     unsigned char 
   970 ;; Auto vars:     Size  Location     Type
   971 ;;  mode            1    1[COMMON] unsigned char 
   972 ;; Return value:  Size  Location     Type
   973 ;;                  1    wreg      unsigned char 
   974 ;; Registers used:
   975 ;;		wreg, status,2, status,0
   976 ;; Tracked objects:
   977 ;;		On entry : 0/0
   978 ;;		On exit  : 0/0
   979 ;;		Unchanged: 0/0
   980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   981 ;;      Params:         0       0       0       0       0
   982 ;;      Locals:         1       0       0       0       0
   983 ;;      Temps:          1       0       0       0       0
   984 ;;      Totals:         2       0       0       0       0
   985 ;;Total ram usage:        2 bytes
   986 ;; Hardware stack levels used: 1
   987 ;; This function calls:
   988 ;;		Nothing
   989 ;; This function is called by:
   990 ;;		_main
   991 ;; This function uses a non-reentrant model
   992 ;;
   993                           
   994     0649                     _read_digital_keypad:	
   995                           ;psect for function _read_digital_keypad
   996                           
   997                           
   998                           ;incstack = 0
   999                           ; Regs used in _read_digital_keypad: [wreg+status,2+status,0]
  1000                           ;read_digital_keypad@mode stored from wreg
  1001     0649  00F1               	movwf	read_digital_keypad@mode
  1002     064A                     l620:
  1003                           
  1004                           ;digital_keypad.c: 10: unsigned char read_digital_keypad(unsigned char mode);digital_key
      +                          pad.c: 11: {;digital_keypad.c: 12:     static unsigned char once = 1;;digital_keypad.c: 
      +                          14:     if (mode == 0)
  1005     064A  0871               	movf	read_digital_keypad@mode,w
  1006     064B  1D03               	btfss	3,2
  1007     064C  2E4E               	goto	u11
  1008     064D  2E4F               	goto	u10
  1009     064E                     u11:
  1010     064E  2E54               	goto	l628
  1011     064F                     u10:
  1012     064F                     l622:
  1013                           
  1014                           ;digital_keypad.c: 15:     {;digital_keypad.c: 16:         return PORTB & 0x3F;
  1015     064F  1283               	bcf	3,5	;RP0=0, select bank0
  1016     0650  1303               	bcf	3,6	;RP1=0, select bank0
  1017     0651  0806               	movf	6,w	;volatile
  1018     0652  393F               	andlw	63
  1019     0653  2E72               	goto	l66
  1020     0654                     l628:
  1021                           
  1022                           ;digital_keypad.c: 19:     {;digital_keypad.c: 20:         if (((PORTB & 0x3F) != 0x3F) 
      +                          && once)
  1023     0654  303F               	movlw	63
  1024     0655  1283               	bcf	3,5	;RP0=0, select bank0
  1025     0656  1303               	bcf	3,6	;RP1=0, select bank0
  1026     0657  0506               	andwf	6,w	;volatile
  1027     0658  00F0               	movwf	??_read_digital_keypad
  1028     0659  303F               	movlw	63
  1029     065A  0670               	xorwf	??_read_digital_keypad,w
  1030     065B  1903               	btfsc	3,2
  1031     065C  2E5E               	goto	u21
  1032     065D  2E5F               	goto	u20
  1033     065E                     u21:
  1034     065E  2E66               	goto	l640
  1035     065F                     u20:
  1036     065F                     l630:
  1037     065F  087B               	movf	read_digital_keypad@once,w
  1038     0660  1903               	btfsc	3,2
  1039     0661  2E63               	goto	u31
  1040     0662  2E64               	goto	u30
  1041     0663                     u31:
  1042     0663  2E66               	goto	l640
  1043     0664                     u30:
  1044     0664                     l632:
  1045                           
  1046                           ;digital_keypad.c: 21:         {;digital_keypad.c: 22:             once = 0;
  1047     0664  01FB               	clrf	read_digital_keypad@once
  1048     0665  2E4F               	goto	l622
  1049     0666                     l640:
  1050     0666  303F               	movlw	63
  1051     0667  0506               	andwf	6,w	;volatile
  1052     0668  00F0               	movwf	??_read_digital_keypad
  1053     0669  303F               	movlw	63
  1054     066A  0670               	xorwf	??_read_digital_keypad,w
  1055     066B  1D03               	btfss	3,2
  1056     066C  2E6E               	goto	u41
  1057     066D  2E6F               	goto	u40
  1058     066E                     u41:
  1059     066E  2E71               	goto	l644
  1060     066F                     u40:
  1061     066F                     l642:
  1062                           
  1063                           ;digital_keypad.c: 27:         {;digital_keypad.c: 28:             once = 1;
  1064     066F  01FB               	clrf	read_digital_keypad@once
  1065     0670  0AFB               	incf	read_digital_keypad@once,f
  1066     0671                     l644:
  1067                           
  1068                           ;digital_keypad.c: 32:     return 0x3F;
  1069     0671  303F               	movlw	63
  1070     0672                     l66:
  1071     0672  0008               	return
  1072     0673                     __end_of_read_digital_keypad:
  1073                           
  1074                           	psect	text2
  1075     063D                     __ptext2:	
  1076 ;; *************** function _init_config *****************
  1077 ;; Defined at:
  1078 ;;		line 8 in file "main.c"
  1079 ;; Parameters:    Size  Location     Type
  1080 ;;		None
  1081 ;; Auto vars:     Size  Location     Type
  1082 ;;		None
  1083 ;; Return value:  Size  Location     Type
  1084 ;;                  1    wreg      void 
  1085 ;; Registers used:
  1086 ;;		wreg, status,2, status,0, pclath, cstack
  1087 ;; Tracked objects:
  1088 ;;		On entry : 0/0
  1089 ;;		On exit  : 0/0
  1090 ;;		Unchanged: 0/0
  1091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1092 ;;      Params:         0       0       0       0       0
  1093 ;;      Locals:         0       0       0       0       0
  1094 ;;      Temps:          0       0       0       0       0
  1095 ;;      Totals:         0       0       0       0       0
  1096 ;;Total ram usage:        0 bytes
  1097 ;; Hardware stack levels used: 1
  1098 ;; Hardware stack levels required when called: 1
  1099 ;; This function calls:
  1100 ;;		_init_digital_keypad
  1101 ;; This function is called by:
  1102 ;;		_main
  1103 ;; This function uses a non-reentrant model
  1104 ;;
  1105                           
  1106     063D                     _init_config:	
  1107                           ;psect for function _init_config
  1108                           
  1109     063D                     l616:	
  1110                           ;incstack = 0
  1111                           ; Regs used in _init_config: [wreg+status,2+status,0+pclath+cstack]
  1112                           
  1113                           
  1114                           ;main.c: 10: }
  1115     063D  1283               	bcf	3,5	;RP0=0, select bank0
  1116     063E  1303               	bcf	3,6	;RP1=0, select bank0
  1117     063F  0188               	clrf	8	;volatile
  1118                           
  1119                           ;main.c: 13:     unsigned char key;
  1120     0640  1683               	bsf	3,5	;RP0=1, select bank1
  1121     0641  1303               	bcf	3,6	;RP1=0, select bank1
  1122     0642  0188               	clrf	8	;volatile
  1123     0643                     l618:
  1124                           
  1125                           ;main.c: 16:      volatile unsigned int state = 0;
  1126     0643  120A  118A  2637  120A  118A  	fcall	_init_digital_keypad
  1127     0648                     l11:
  1128     0648  0008               	return
  1129     0649                     __end_of_init_config:
  1130                           
  1131                           	psect	text3
  1132     0637                     __ptext3:	
  1133 ;; *************** function _init_digital_keypad *****************
  1134 ;; Defined at:
  1135 ;;		line 4 in file "digital_keypad.c"
  1136 ;; Parameters:    Size  Location     Type
  1137 ;;		None
  1138 ;; Auto vars:     Size  Location     Type
  1139 ;;		None
  1140 ;; Return value:  Size  Location     Type
  1141 ;;                  1    wreg      void 
  1142 ;; Registers used:
  1143 ;;		wreg, status,2
  1144 ;; Tracked objects:
  1145 ;;		On entry : 0/0
  1146 ;;		On exit  : 0/0
  1147 ;;		Unchanged: 0/0
  1148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1149 ;;      Params:         0       0       0       0       0
  1150 ;;      Locals:         0       0       0       0       0
  1151 ;;      Temps:          0       0       0       0       0
  1152 ;;      Totals:         0       0       0       0       0
  1153 ;;Total ram usage:        0 bytes
  1154 ;; Hardware stack levels used: 1
  1155 ;; This function calls:
  1156 ;;		Nothing
  1157 ;; This function is called by:
  1158 ;;		_init_config
  1159 ;; This function uses a non-reentrant model
  1160 ;;
  1161                           
  1162     0637                     _init_digital_keypad:	
  1163                           ;psect for function _init_digital_keypad
  1164                           
  1165     0637                     l614:	
  1166                           ;incstack = 0
  1167                           ; Regs used in _init_digital_keypad: [wreg+status,2]
  1168                           
  1169                           
  1170                           ;digital_keypad.c: 7:     TRISB = TRISB | 0x3F;
  1171     0637  1683               	bsf	3,5	;RP0=1, select bank1
  1172     0638  1303               	bcf	3,6	;RP1=0, select bank1
  1173     0639  0806               	movf	6,w	;volatile
  1174     063A  383F               	iorlw	63
  1175     063B  0086               	movwf	6	;volatile
  1176     063C                     l60:
  1177     063C  0008               	return
  1178     063D                     __end_of_init_digital_keypad:
  1179     007E                     btemp	set	126	;btemp
  1180     007E                     wtemp0	set	126
  1181                           
  1182                           	psect	idloc
  1183                           
  1184                           ;Config register IDLOC0 @ 0x2000
  1185                           ;	unspecified, using default values
  1186     2000                     	org	8192
  1187     2000  3FFF               	dw	16383
  1188                           
  1189                           ;Config register IDLOC1 @ 0x2001
  1190                           ;	unspecified, using default values
  1191     2001                     	org	8193
  1192     2001  3FFF               	dw	16383
  1193                           
  1194                           ;Config register IDLOC2 @ 0x2002
  1195                           ;	unspecified, using default values
  1196     2002                     	org	8194
  1197     2002  3FFF               	dw	16383
  1198                           
  1199                           ;Config register IDLOC3 @ 0x2003
  1200                           ;	unspecified, using default values
  1201     2003                     	org	8195
  1202     2003  3FFF               	dw	16383
  1203                           
  1204                           	psect	config
  1205                           
  1206                           ;Config register CONFIG @ 0x2007
  1207                           ;	Oscillator Selection bits
  1208                           ;	FOSC = 0x3, unprogrammed default
  1209                           ;	Watchdog Timer Enable bit
  1210                           ;	WDTE = OFF, WDT disabled
  1211                           ;	Power-up Timer Enable bit
  1212                           ;	PWRTE = 0x1, unprogrammed default
  1213                           ;	Brown-out Reset Enable bit
  1214                           ;	BOREN = 0x1, unprogrammed default
  1215                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1216                           ;	LVP = 0x1, unprogrammed default
  1217                           ;	Data EEPROM Memory Code Protection bit
  1218                           ;	CPD = 0x1, unprogrammed default
  1219                           ;	Flash Program Memory Write Enable bits
  1220                           ;	WRT = 0x3, unprogrammed default
  1221                           ;	In-Circuit Debugger Mode bit
  1222                           ;	DEBUG = 0x1, unprogrammed default
  1223                           ;	Flash Program Memory Code Protection bit
  1224                           ;	CP = 0x1, unprogrammed default
  1225     2007                     	org	8199
  1226     2007  3FFB               	dw	16379

Data Sizes:
    Strings     0
    Constant    2
    Data        1
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      12
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_read_digital_keypad

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0     480
                                              2 COMMON     9     9      0
                        _init_config
                _read_digital_keypad
 ---------------------------------------------------------------------------------
 (1) _read_digital_keypad                                  2     2      0      15
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0       0
                _init_digital_keypad
 ---------------------------------------------------------------------------------
 (2) _init_digital_keypad                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_config
     _init_digital_keypad
   _read_digital_keypad

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       0       5        0.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      B       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       C      12        0.0%
ABS                  0      0       C       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sun Jun 23 19:37:08 2024

                          pc 0002                           l11 0648                           l22 06C5  
                         l60 063C                           l37 07F2                           l66 0672  
                         u10 064F                           u11 064E                           u20 065F  
                         u21 065E                           u30 0664                           u31 0663  
                         u40 066F                           u41 066E                           u50 068C  
                         u51 068B                           u60 0691                           u61 0690  
                         u70 069C                           u71 069B                           u80 06A2  
                         u81 06A1                           u90 06AB                           u91 06AA  
                         fsr 0004                          l620 064A                          l700 06FB  
                        l614 0637                          l630 065F                          l622 064F  
                        l710 0729                          l702 0704                          l616 063D  
                        l632 0664                          l640 0666                          l720 0756  
                        l712 0732                          l704 070D                          l618 0643  
                        l642 066F                          l730 077B                          l650 067A  
                        l644 0671                          l628 0654                          l724 0769  
                        l716 0744                          l708 0720                          l660 0693  
                        l652 067F                          l750 07CB                          l734 078B  
                        l718 074D                          l726 076C                          l670 06A5  
                        l662 0696                          l654 0686                          l760 07DE  
                        l752 07CF                          l736 0794                          l728 0772  
                        l744 07B0                          l680 06BC                          l672 06AB  
                        l664 069C                          l656 068C                          l648 0673  
                        l762 07ED                          l746 07B6                          l738 079D  
                        l690 06D5                          l682 06C2                          l674 06B1  
                        l666 06A2                          l658 0691                          l748 07BC  
                        l756 07D2                          l692 06D7                          l676 06B3  
                        l758 07D8                          l694 06DC                          l678 06B6  
                        l686 06C5                          l696 06E5                          l688 06CE  
                        l698 06F4                          u100 06B1                          u101 06B0  
                        u110 06BC                          u111 06BB                          u200 0729  
                        u120 06C2                          u201 0728                          u121 06C1  
                        u210 0732                          u130 06CE                          u211 0731  
                        u131 06CD                          u300 079D                          u140 06DC  
                        u301 079C                          u141 06DB                          u230 074D  
                        u150 06E5                          u231 074C                          u151 06E4  
                        u320 07B6                          u240 0756                          u224 073A  
                        u321 07B5                          u241 0755                          u225 0738  
                        u330 07BC                          u314 07A5                          u170 0704  
                        u331 07BB                          u315 07A3                          u171 0703  
                        u340 07D8                          u260 0772                          u180 070D  
                        u164 06EB                          u341 07D7                          u261 0771  
                        u181 070C                          u165 06E9                          u350 07DE  
                        u270 077B                          u254 075E                          u351 07DD  
                        u271 077A                          u255 075C                          u290 0794  
                        u194 0715                          u291 0793                          u195 0713  
                        u284 0781                          u285 077F        ??_read_digital_keypad 0070  
                       _main 0673                         btemp 007E                         start 0000  
                      ?_main 0070                 ?_init_config 0070                        _PORTB 0006  
                      _PORTD 0008                        _TRISB 0086                        _TRISD 0088  
                      main@i 0079                        pclath 000A                        status 0003  
                      wtemp0 007E              __initialization 07F6                 __end_of_main 07F6  
                     ??_main 0072  __end_of_init_digital_keypad 063D                 __pdataCOMMON 007B  
    __end_of__initialization 07FC               __pcstackCOMMON 0070                   __pmaintext 0673  
__end_of_read_digital_keypad 0673            main@delay_counter 0074                   __stringtab 0003  
                    __ptext1 0649                      __ptext2 063D                      __ptext3 0637  
                    main@key 0073         end_of_initialization 07FC                __pidataCOMMON 0636  
        start_initialization 07F6              main@delay_limit 0009                ??_init_config 0070  
                  ___latbits 0002                    __pstrings 0003          __end_of_init_config 0649  
    __end_ofmain@delay_limit 000B                  __stringbase 0008                    main@state 0076  
        _init_digital_keypad 0637         ?_init_digital_keypad 0070           __end_of__stringtab 0009  
                _init_config 063D      read_digital_keypad@mode 0071      read_digital_keypad@once 007B  
      ??_init_digital_keypad 0070                     main@flag 0078                    stringcode 0003  
        _read_digital_keypad 0649                     stringdir 0003                     stringtab 0003  
       ?_read_digital_keypad 0070  
